// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  blogs     Blog[]
  Comment   Comment[]

  @@map("users")
}

model Blog {
  id          Int     @id @default(autoincrement())
  title       String
  blogContent String  @db.Text
  thumbnail   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postedBy Int
  user     User @relation(fields: [postedBy], references: [id], onDelete: Cascade, onUpdate: Cascade)

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: SetNull)

  Comment Comment[]

  @@map("blogs")
}

model Category {
  id    Int    @id @default(autoincrement())
  title String

  Blog  Blog[]

  @@map("categories")
}

model Comment {
  id      Int    @id @default(autoincrement())
  comment String @db.Text

  createdBy Int
  creator   User @relation(fields: [createdBy], references: [id], onDelete: Cascade, onUpdate: Cascade)

  blogId Int  @default(0)
  blog   Blog @relation(fields: [blogId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("comments")
}
